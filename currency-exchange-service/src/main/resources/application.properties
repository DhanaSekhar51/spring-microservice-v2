spring.application.name=currency-exchange
server.port=8000

spring.config.import=optional:configserver:http://localhost:8888

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

#below property using for data.sql. If we are using springboot 2.4+ then before creating table data.sql will run. SO that it throw exceptions. To avoid that adding below property
spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#below property changing for docker doesn't know the localhost so that instead of that use service name mentioned in docker-compose file
#eureka.client.serviceUrl.defaultZone=http://naming-server:8761/eureka

resilience4j.retry.instances.sample-api.maxRetryAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

resilience4j.ratelimiter.instances.default.limitsForPeriod=2
resilience4j.ratelimiter.instances.default.limitsRefreshPeriod=10s

resilience4j.ratelimiter.instances.default.maxConcurrentCalls=10

#below property added for configuring percentage of request for each request from microservice. If we maintain 100% it will impact performance
spring.sleuth.sampler.probability=1.0